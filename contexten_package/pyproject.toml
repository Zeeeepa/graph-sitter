[project]
name = "contexten"
dynamic = ["version"]
description = "Agentic orchestrator with chat-agent capabilities, LangChain, GitHub, Linear, and Slack integrations"
readme = "README.md"
# renovate: datasource=python-version depName=python
requires-python = ">=3.12, <3.14"
dependencies = [
  # Core dependencies
  "openai==1.78.1",
  "tiktoken<1.0.0,>=0.5.1",
  "pydantic<3.0.0,>=2.9.2",
  "pydantic-settings>=2.0.0",
  "rich<14.0.0,>=13.7.1",
  "rich-click>=1.8.5",
  "click>=8.1.7",
  "python-dotenv>=1.0.1",
  "requests>=2.32.3",
  "fastapi[standard]<1.0.0,>=0.115.2",
  "uvicorn[standard]>=0.30.0",
  
  # Agent and orchestration dependencies
  "langchain>=0.3.0",
  "langchain-community>=0.3.0",
  "langchain-openai>=0.2.0",
  
  # Integration dependencies
  "PyGithub==2.6.1",
  "GitPython==3.1.44",
  "slack-sdk>=3.33.0",
  
  # Workflow and task management
  "prefect>=3.0.0",
  "prefect[kubernetes]>=3.0.0",
  "modal>=0.73.45",
  
  # Utilities
  "colorlog>=6.9.0",
  "tqdm>=4.67.1",
  "packaging>=24.2",
  "typing-extensions>=4.12.2",
  "psutil>=5.8.0",
  
  # Graph Sitter dependency (local)
  "graph-sitter",
]

# renovate: datasource=python-version depName=python
license = { text = "Apache-2.0" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Environment :: MacOS X",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "License :: OSI Approved",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Code Generators",
  "Topic :: Software Development :: Libraries",
]
authors = [{ name = "Codegen Team", email = "team@codegen.sh" }]
keywords = [
  "contexten",
  "agent",
  "orchestration",
  "langchain",
  "github",
  "linear",
  "slack",
  "workflow",
  "automation",
]

[project.scripts]
contexten = "contexten.cli.cli:main"
contexten-dashboard = "contexten.dashboard:main"

[project.optional-dependencies]
dev = [
  "pytest>=8.3.3",
  "pytest-cov>=6.1.0",
  "pytest-mock<4.0.0,>=3.14.0",
  "pytest-asyncio>=0.21.1,<1.0.0",
  "mypy[mypyc,faster-cache]>=1.13.0",
  "ruff>=0.6.8",
  "pre-commit>=4.0.1",
]

[tool.setuptools]
package-dir = {"" = "../src"}

[tool.setuptools.packages.find]
where = ["../src"]
include = ["contexten*"]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"
